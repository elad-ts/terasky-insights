name: Release Go Binaries

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    name: Build Go Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux-amd64, linux-arm64, darwin-amd64, darwin-arm64, windows-amd64]
        include:
          - platform: linux-amd64
            GOOS: linux
            GOARCH: amd64
            extension: ""
          - platform: linux-arm64
            GOOS: linux
            GOARCH: arm64
            extension: ""
          - platform: darwin-amd64
            GOOS: darwin
            GOARCH: amd64
            extension: ""
          - platform: darwin-arm64
            GOOS: darwin
            GOARCH: arm64
            extension: ""
          - platform: windows-amd64
            GOOS: windows
            GOARCH: amd64
            extension: ".exe"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.6' 

      - name: Build binary
        run: |
          env GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go build -o terasky-insights-${{ matrix.platform }}${{ matrix.extension }}
        working-directory: ./ 

      - name: Upload binary to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terasky-insights-${{ matrix.platform }}${{ matrix.extension }}
          path: terasky-insights-${{ matrix.platform }}${{ matrix.extension }}

  release:
    name: Create and Upload Release
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: binaries/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: upload linux amd64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/terasky-insights/terasky-insights/binaries/terasky-insights-linux-amd64/terasky-insights-linux-amd64
          asset_name: terasky-insights-linux-amd64 
          asset_content_type: application/octet-stream
      - name: upload linux arm64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/terasky-insights/terasky-insights/binaries/terasky-insights-linux-arm64/terasky-insights-linux-arm64
          asset_name: terasky-insights-linux-arm64 
          asset_content_type: application/octet-stream
      - name: upload darwin amd64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/terasky-insights/terasky-insights/binaries/terasky-insights-darwin-amd64/terasky-insights-darwin-amd64
          asset_name: terasky-insights-darwin-amd64 
          asset_content_type: application/octet-stream
      - name: upload darwin arm64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/terasky-insights/terasky-insights/binaries/terasky-insights-darwin-arm64/terasky-insights-darwin-arm64
          asset_name: terasky-insights-darwin-arm64 
          asset_content_type: application/octet-stream
      - name: upload windows amd64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/terasky-insights/terasky-insights/binaries/terasky-insights-windows-amd64.exe/terasky-insights-windows-amd64.exe 
          asset_name: terasky-insights-windows-amd64 
          asset_content_type: application/octet-stream